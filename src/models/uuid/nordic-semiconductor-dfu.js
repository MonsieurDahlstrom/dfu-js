// Copyright (c) 2017 Monsieur Dahlstr√∂m Ltd
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

/*
* This module exports the uuid that identifies the nordic semicondutors
device firmware update Service and Characteristics

* The Services and Characteristics UUID are generated by replacing the 12,13
* octet with a uniqe id.
*/

/*

*/
const NordicButtonlessDFUBaseUUID = "8E40xxxx-F315-4F60-9FB8-838830DAEA50"

/*

*/
const NordicButtonlessDFUIdentifiers = {
  ServiceAndControlPoint: "0001"
};

const DFU_BASE = '0000xxxx-0000-1000-8000-00805f9b34fb'
const DFU_CHAR_BASE = '8ec9xxxx-f315-4f60-9fb8-838830daea50'

const DFUIdentifiers = {
  // DFU by Nordic Semiconductor
  DFUSecure: "FE59",
  // Control Point is notify, write
  DFUSecureControlPoint: "0001",
  // Packet is Write No Response
  DFUSecurePacketPoint: "0002",
}

const GetUUID = function(identifier,baseuuid) {
  var index = baseuuid.indexOf('xx');
  var uuidString = baseuuid.substring(0,index) + identifier.substring(0,2) + baseuuid.substring(index+2,baseuuid.length);
  index = uuidString.indexOf('xx')
  uuidString = uuidString.substring(0,index) + identifier.substring(2,4) + uuidString.substring(index+2,uuidString.length);
  return uuidString;
}

export const NordicSemiconductorServices = {
  DFU: GetUUID(DFUIdentifiers.DFUSecure,DFU_BASE).toLowerCase(),
  Buttonless: GetUUID(NordicButtonlessDFUIdentifiers.ServiceAndControlPoint,NordicButtonlessDFUBaseUUID).toLowerCase()
}

export const NordicSemiconductorCharacteristics = {
  ControlPoint: GetUUID(DFUIdentifiers.DFUSecureControlPoint,DFU_CHAR_BASE).toLowerCase(),
  PacketPoint: GetUUID(DFUIdentifiers.DFUSecurePacketPoint,DFU_CHAR_BASE).toLowerCase(),
  Buttonless: GetUUID(NordicButtonlessDFUIdentifiers.ServiceAndControlPoint,NordicButtonlessDFUBaseUUID).toLowerCase()
}
