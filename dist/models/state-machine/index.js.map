{"version":3,"sources":["../../../src/models/state-machine/index.js"],"names":["stateSymbol","controlPointSymbol","packetPointSymbol","transfersSymbol","queueSymbol","progressSymbol","StateMachine","webBluetoothControlPoint","webBluetoothPacketPoint","undefined","IDLE","NOT_CONFIGURED","error","onTransferError","completed","size","transfer","console","log","state","COMPLETE","FAILED","TRANSFERING","progress","transfers","Completed","file","length","Transfer","emit","dfuStateMachine","push","queue","kill","firmware","Error","updateFunc","event","calculateProgress","firmwareSize","sections","section","datTransfer","dat","controlPoint","packetPoint","Command","on","binTransfer","bin","Data","addTransfer","value","webBluetoothCharacteristic","module","exports","DFUStateMachineStates","DFUStateMachine"],"mappingsqBA;;;;AACA;;;;AAEA;;AACA;;AACA;;AACA;;;;;;AAQA,IAAIA,sCAAc,uBAAd,CAAJ;AACA,IAAIC,6CAAqB,uBAArB,CAAJ;AACA,IAAIC,4CAAoB,uBAApB,CAAJ;AACA,IAAIC,0CAAkB,uBAAlB,CAAJ;AACA,IAAIC,sCAAc,uBAAd,CAAJ;AACA,IAAIC,yCAAiB,uBAAjB,CAAJ;;IAEMC,Y;;;AAEJ,wBAAaC,wBAAb,EAAuCC,uBAAvC,EAAgE;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAE9D,UAAKP,kBAAL,IAA2BM,wBAA3B;AAF8D;AAG9D,UAAKL,iBAAL,IAA0BM,uBAA1B;AAH8D;AAI9D,QAAI,iCAAKP,kBAAL,MAA6BQ,SAA7B,gCAA0C,MAAKP,iBAAL,MAA4BO,SAAtE,CAAJ,EAAqF;AAAA;AAAA;;AACnF,YAAKT,WAAL,IAAoB,iBAAmBU,IAAvC;AACD,KAFD,MAEO;AAAA;AAAA;;AACL,YAAKV,WAAL,IAAoB,iBAAmBW,cAAvC;AACD;AAR6D;AAS9D,UAAKR,eAAL,IAAwB,EAAxB;AAT8D;AAU9D,UAAKC,WAAL,IAAoB,+CAAsB,CAAtB,CAApB;AAV8D;AAW9D,UAAKA,WAAL,EAAkBQ,KAAlB,CAAwB,MAAKC,eAA7B;AAX8D;AAY9D,UAAKR,cAAL,IAAuB,EAACS,WAAW,GAAZ,EAAiBC,MAAM,GAAvB,EAAvB;AAZ8D;AAa/D;;;;;;;;;;;;;;gBAEeH,K,EAAOI,Q,EAAU;AAAA;AAAA;;AAC/BC,cAAQC,GAAR,CAAYL,eAAZ;AACD,K;;;wCA+DoB;AAAA;AAAA;;AACnB,cAAQ,KAAKM,KAAb;AACE,aAAK,iBAAmBR,cAAxB;AAAA;AAAA;;AACE,eAAKN,cAAL,EAAqBS,SAArB,GAAkC,GAAlC;AADF;AAEE;AACF,aAAK,iBAAmBJ,IAAxB;AAAA;AAAA;;AACE,eAAKL,cAAL,EAAqBS,SAArB,GAAiC,GAAjC;AADF;AAEE;AACF,aAAK,iBAAmBM,QAAxB;AAAA;AAAA;;AACE,eAAKf,cAAL,EAAqBS,SAArB,GAAiC,KAAKT,cAAL,EAAqBU,IAAtD;AADF;AAEE;AACF,aAAK,iBAAmBM,MAAxB;AAAA;AAAA;;AACE,eAAKhB,cAAL,EAAqBS,SAArB,GAAiC,KAAKT,cAAL,EAAqBU,IAAtD;AADF;AAEE;AACF,aAAK,iBAAmBO,WAAxB;AAAA;;AACE,cAAIC,oCAAW,CAAX,CAAJ;AADF;AAAA;AAAA;AAAA;;AAAA;AAEE,4DAAqB,KAAKC,SAA1B,4GAAqC;AAAA,kBAA5BR,QAA4B;AAAA;;AACnC,sBAAQA,SAASG,KAAjB;AACE,qBAAK,yBAAeM,SAApB;AAAA;AAAA;;AACEF,8BAAYP,SAASU,IAAT,CAAcC,MAA1B;AACF,qBAAK,yBAAeC,QAApB;AAAA;AAAA;;AACEL,8BAAYP,SAASU,IAAT,CAAcC,MAAd,GAAuBX,SAASO,QAA5C;AACF;AAAA;AAAA;;AACEA,8BAAY,CAAZ;AADF;AAEE;AAPJ;AASD;AAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAaE,eAAKlB,cAAL,EAAqBS,SAArB,GAAiCS,QAAjC;AAbF;AAcE;AA3BJ;AADmB;AA8BnB,WAAKM,IAAL,CAAU,iBAAV,EAA4B,EAACC,iBAAiB,IAAlB,EAAwBP,UAAU,KAAKlB,cAAL,CAAlC,EAA5B;AACD;;;gCAIYW,Q,EAAU;AAAA;;AAAA;AAAA;;AACrB,WAAKQ,SAAL,CAAeO,IAAf,CAAoBf,QAApB;AADqB;AAErB,WAAKgB,KAAL,CAAWD,IAAX,CAAgBf,QAAhB,EAA0B,UAACJ,KAAD,EAAW;AAAA;AAAA;;AACnC,YAAI,kEAASI,SAASG,KAAT,KAAmB,iBAAmBE,MAA/C,CAAJ,EAA2D;AAAA;AAAA;;AACzD,iBAAKW,KAAL,CAAWC,IAAX;AADyD;AAEzD,iBAAKd,KAAL,GAAa,iBAAmBE,MAAhC;AACD,SAHD,MAGO;AAAA;AAAA;AAAA,gBAAG,OAAKW,KAAL,CAAWL,MAAX,OAAwB,CAA3B,EAA8B;AAAA;AAAA;;AACnC,qBAAKR,KAAL,GAAa,iBAAmBC,QAAhC;AACD,aAFM;AAAA;AAAA;AAEN;AACF,OAPD;AAQD;;;iCAIac,Q,EAAU;AAAA;;AAAA;AAAA;;AACtB,UAAI,KAAKf,KAAL,KAAe,iBAAmBR,cAAtC,EAAsD;AAAA;AAAA;;AACpD,cAAM,IAAIwB,KAAJ,CAAU,+DAAV,CAAN;AACD,OAFD;AAAA;AAAA;AADsB;AAItB,UAAI,KAAKhB,KAAL,KAAe,iBAAmBT,IAAtC,EAA4C;AAAA;AAAA;;AAC1C,cAAM,IAAIyB,KAAJ,CAAU,qCAAV,CAAN;AACD,OAFD;AAAA;AAAA;AAJsB;AAOtB,UAAID,2CAAiC,KAArC,EAA4C;AAAA;AAAA;;AAC1C,cAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD,OAFD;AAAA;AAAA;AAPsB;AAUtB,UAAIC,aAAa,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;AAAA;;AAC1B,eAAKC,iBAAL;AACD,OAFD;AAGA,UAAIC,wCAAe,CAAf,CAAJ;AAbsB;AAAA;AAAA;AAAA;;AAAA;AActB,yDAAmBL,SAASM,QAA5B,iHAAsC;AAAA,cAA9BC,OAA8B;;AACpC,cAAIC,uCAAc,uBAAaD,QAAQE,GAArB,EAA0B,KAAKC,YAA/B,EAA6C,KAAKC,WAAlD,EAA+D,wBAAcC,OAA7E,CAAd,CAAJ;AADoC;AAEpCJ,sBAAYK,EAAZ,CAAe,iBAAf,EAAkCX,UAAlC;AACA,cAAIY,uCAAc,uBAAaP,QAAQQ,GAArB,EAA0B,KAAKL,YAA/B,EAA6C,KAAKC,WAAlD,EAA+D,wBAAcK,IAA7E,CAAd,CAAJ;AAHoC;AAIpCF,sBAAYD,EAAZ,CAAe,iBAAf,EAAkCX,UAAlC;AAJoC;AAKpC,eAAKe,WAAL,CAAiBT,WAAjB;AALoC;AAMpC,eAAKS,WAAL,CAAiBH,WAAjB;AANoC;AAOpCT,0BAAgBE,QAAQE,GAAR,CAAYhB,MAA5B;AAPoC;AAQpCY,0BAAgBE,QAAQQ,GAAR,CAAYtB,MAA5B;AACD;AAvBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAwBtB,WAAKtB,cAAL,EAAqBS,SAArB,GAAiC,CAAjC;AAxBsB;AAyBtB,WAAKT,cAAL,EAAqBU,IAArB,GAA4BwB,YAA5B;AAzBsB;AA0BtB,WAAKpB,KAAL,GAAa,iBAAmBG,WAAhC;AACD;;;4BAEQ;AAAA;AAAA;;AACP,WAAKU,KAAL,CAAWC,IAAX;AADO;AAEP,WAAKd,KAAL,GAAa,iBAAmBT,IAAhC;AACD;;;wBA7IY;AAAA;AAAA;;AACX,aAAO,KAAKV,WAAL,CAAP;AACD,K;sBAEUoD,K,EAAO;AAAA;AAAA;;AAChB,UAAIA,UAAU,KAAKpD,WAAL,CAAd,EAAiC;AAAA;AAAA;;AAC/B,aAAKA,WAAL,IAAoBoD,KAApB;AAD+B;AAE/B,aAAKvB,IAAL,CAAU,cAAV,EAAyB,EAACC,iBAAiB,IAAlB,EAAwBX,OAAOiC,KAA/B,EAAzB;AACD,OAHD;AAAA;AAAA;AAID;;;wBAGmB;AAAA;AAAA;;AAClB,aAAO,KAAKnD,kBAAL,CAAP;AACD,K;sBAEiBoD,0B,EAA4B;AAAA;AAAA;;AAC5C,WAAKpD,kBAAL,IAA2BoD,0BAA3B;AAD4C;AAE5C,UAAI,gCAAKlC,KAAL,KAAe,iBAAmBR,cAAlC,KAAqD,gCAAKV,kBAAL,KAA4B,IAA5B,gCAAoC,KAAKC,iBAAL,KAA2B,IAA/D,CAAzD,EAA+H;AAAA;AAAA;;AAC7H,aAAKiB,KAAL,GAAa,iBAAmBT,IAAhC;AACD,OAFD,MAEO;AAAA;AAAA;AAAA,cAAG,gCAAKS,KAAL,KAAe,iBAAmBT,IAAlC,MAA2C,gCAAKT,kBAAL,KAA4B,IAA5B,gCAAoC,KAAKC,iBAAL,KAA2B,IAA/D,CAA3C,CAAH,EAAqH;AAAA;AAAA;;AAC1H,iBAAKiB,KAAL,GAAa,iBAAmBR,cAAhC;AACD,WAFM;AAAA;AAAA;AAEN;AACF;;;wBAIkB;AAAA;AAAA;;AACjB,aAAO,KAAKT,iBAAL,CAAP;AACD,K;sBAEgBmD,0B,EAA4B;AAAA;AAAA;;AAC3C,WAAKnD,iBAAL,IAA0BmD,0BAA1B;AAD2C;AAE3C,UAAI,gCAAKlC,KAAL,KAAe,iBAAmBR,cAAlC,KAAqD,gCAAKV,kBAAL,KAA4B,IAA5B,gCAAmC,KAAKC,iBAAL,KAA2B,IAA9D,CAAzD,EAA8H;AAAA;AAAA;;AAC5H,aAAKiB,KAAL,GAAa,iBAAmBT,IAAhC;AACD,OAFD,MAEO;AAAA;AAAA;AAAA,cAAG,iCAAKS,KAAL,KAAe,iBAAmBT,IAAlC,MAA2C,iCAAKT,kBAAL,KAA4B,IAA5B,iCAAsC,KAAKC,iBAAL,KAA2B,IAAjE,CAA3C,CAAH,EAAsH;AAAA;AAAA;;AAC3H,iBAAKiB,KAAL,GAAa,iBAAmBR,cAAhC;AACD,WAFM;AAAA;AAAA;AAEN;AACF;;;wBAIgB;AAAA;AAAA;;AACf,aAAO,KAAKR,eAAL,CAAP;AACD;;;wBAKe;AAAA;AAAA;;AACd,aAAO,KAAKE,cAAL,CAAP;AACD;;;wBAIY;AAAA;AAAA;;AACX,aAAO,KAAKD,WAAL,CAAP;AACD;;;;;;;;AAuFHkD,OAAOC,OAAP,CAAeC,qBAAf;;AACAF,OAAOC,OAAP,CAAeE,eAAf,GAAiCnD,YAAjC","file":"index.js","sourcesContent":["// Copyright (c) 2017 Monsieur Dahlstr√∂m Ltd\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport queue from 'async/queue'\nimport EventEmitter from 'events'\n\nimport {Firmware, FirmwareType} from '../firmware'\nimport {Transfer, TransferStates, TransferWorker, TransferTypes} from '../transfer'\nimport {Task} from '../task'\nimport StateMachineStates from './states'\n\n/**\nMain Facade class to the library\n  Create StateMachine with WebBluetoothCharacteristics representing the data and control point\n  Monitor the state property and use the function sendFirmware() to send a DFU zip.\n**/\n\nlet stateSymbol = Symbol()\nlet controlPointSymbol = Symbol()\nlet packetPointSymbol = Symbol()\nlet transfersSymbol = Symbol()\nlet queueSymbol = Symbol()\nlet progressSymbol = Symbol()\n\nclass StateMachine extends EventEmitter {\n\n  constructor (webBluetoothControlPoint, webBluetoothPacketPoint) {\n    super()\n    this[controlPointSymbol] = webBluetoothControlPoint\n    this[packetPointSymbol] = webBluetoothPacketPoint\n    if (this[controlPointSymbol] !== undefined && this[packetPointSymbol] !== undefined) {\n      this[stateSymbol] = StateMachineStates.IDLE\n    } else {\n      this[stateSymbol] = StateMachineStates.NOT_CONFIGURED\n    }\n    this[transfersSymbol] = []\n    this[queueSymbol] = queue(TransferWorker, 1)\n    this[queueSymbol].error(this.onTransferError)\n    this[progressSymbol] = {completed: 0.0, size: 1.0}\n  }\n\n  onTransferError(error, transfer) {\n    console.log(onTransferError)\n  }\n\n  /** get/set **/\n  get state () {\n    return this[stateSymbol]\n  }\n\n  set state (value) {\n    if (value !== this[stateSymbol]) {\n      this[stateSymbol] = value\n      this.emit('stateChanged',{dfuStateMachine: this, state: value})\n    }\n  }\n  /** get/set **/\n\n  get controlPoint () {\n    return this[controlPointSymbol]\n  }\n\n  set controlPoint (webBluetoothCharacteristic) {\n    this[controlPointSymbol] = webBluetoothCharacteristic\n    if (this.state === StateMachineStates.NOT_CONFIGURED && (this[controlPointSymbol] != null && this[packetPointSymbol] != null)) {\n      this.state = StateMachineStates.IDLE\n    } else if(this.state === StateMachineStates.IDLE && (this[controlPointSymbol] == null || this[packetPointSymbol] == null )) {\n      this.state = StateMachineStates.NOT_CONFIGURED\n    }\n  }\n\n  /** get/set **/\n\n  get packetPoint () {\n    return this[packetPointSymbol]\n  }\n\n  set packetPoint (webBluetoothCharacteristic) {\n    this[packetPointSymbol] = webBluetoothCharacteristic\n    if (this.state === StateMachineStates.NOT_CONFIGURED && (this[controlPointSymbol] != null&& this[packetPointSymbol] != null)) {\n      this.state = StateMachineStates.IDLE\n    } else if(this.state === StateMachineStates.IDLE && (this[controlPointSymbol] == null  ||  this[packetPointSymbol] == null)) {\n      this.state = StateMachineStates.NOT_CONFIGURED\n    }\n  }\n\n  /** get/set **/\n\n  get transfers () {\n    return this[transfersSymbol]\n  }\n\n\n  /** get/set **/\n\n  get progress () {\n    return this[progressSymbol]\n  }\n\n  /** get/set **/\n\n  get queue () {\n    return this[queueSymbol]\n  }\n\n\n  calculateProgress () {\n    switch (this.state) {\n      case StateMachineStates.NOT_CONFIGURED:\n        this[progressSymbol].completed  = 0.0\n        break\n      case StateMachineStates.IDLE:\n        this[progressSymbol].completed = 0.0\n        break\n      case StateMachineStates.COMPLETE:\n        this[progressSymbol].completed = this[progressSymbol].size\n        break\n      case StateMachineStates.FAILED:\n        this[progressSymbol].completed = this[progressSymbol].size\n        break\n      case StateMachineStates.TRANSFERING:\n        var progress = 0\n        for (let transfer of this.transfers) {\n          switch (transfer.state) {\n            case TransferStates.Completed:\n              progress += transfer.file.length\n            case TransferStates.Transfer:\n              progress += transfer.file.length * transfer.progress\n            default:\n              progress += 0\n              break;\n          }\n        }\n        this[progressSymbol].completed = progress\n        break\n    }\n    this.emit('progressChanged',{dfuStateMachine: this, progress: this[progressSymbol]})\n  }\n  /**\n    Internal method used to slot each part of a dfu zip for transfer to device\n  **/\n  addTransfer (transfer) {\n    this.transfers.push(transfer)\n    this.queue.push(transfer, (error) => {\n      if (error || transfer.state === StateMachineStates.FAILED) {\n        this.queue.kill()\n        this.state = StateMachineStates.FAILED\n      } else if(this.queue.length() === 0) {\n        this.state = StateMachineStates.COMPLETE\n      }\n    })\n  }\n  /**\n    Send a firmware to a device. Throws when parameter or state is invalid for sending a firmware\n  **/\n  sendFirmware (firmware) {\n    if (this.state === StateMachineStates.NOT_CONFIGURED) {\n      throw new Error('StateMachine is not configured with bluetooth characteristics')\n    }\n    if (this.state !== StateMachineStates.IDLE) {\n      throw new Error('Can only initate transfer when idle')\n    }\n    if (firmware instanceof Firmware === false) {\n      throw new Error('Firmware needs to be of class Firmware')\n    }\n    var updateFunc = (event) => {\n      this.calculateProgress()\n    }\n    var firmwareSize = 0\n    for(var section of firmware.sections) {\n      let datTransfer = new Transfer(section.dat, this.controlPoint, this.packetPoint, TransferTypes.Command)\n      datTransfer.on('progressChanged', updateFunc)\n      let binTransfer = new Transfer(section.bin, this.controlPoint, this.packetPoint, TransferTypes.Data)\n      binTransfer.on('progressChanged', updateFunc)\n      this.addTransfer(datTransfer)\n      this.addTransfer(binTransfer)\n      firmwareSize += section.dat.length\n      firmwareSize += section.bin.length\n    }\n    this[progressSymbol].completed = 0\n    this[progressSymbol].size = firmwareSize\n    this.state = StateMachineStates.TRANSFERING\n  }\n\n  reset () {\n    this.queue.kill()\n    this.state = StateMachineStates.IDLE\n  }\n}\n\nmodule.exports.DFUStateMachineStates = StateMachineStates\nmodule.exports.DFUStateMachine = StateMachine\n"]}