{"version":3,"sources":["../../../src/models/state-machine/index.js"],"names":["stateSymbol","controlPointSymbol","packetPointSymbol","transfersSymbol","progressSymbol","StateMachine","webBluetoothControlPoint","webBluetoothPacketPoint","undefined","IDLE","NOT_CONFIGURED","Worker","state","progress","COMPLETE","FAILED","TRANSFERING","calculateProgress","transfer","transfers","push","error","end","kill","firmware","Error","sections","section","addTransfer","dat","controlPoint","packetPoint","Command","bin","Data","value","webBluetoothCharacteristic","module","exports","DFUStateMachineStates","DFUStateMachine"],"mappings":"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","file":"index.js","sourcesContent":["// Copyright (c) 2017 Monsieur DahlstrÃ¶m Ltd\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\"use strict\";\r\n\r\nimport queue from 'async/queue'\r\nimport {Firmware, FirmwareType} from '../firmware'\r\nimport {Transfer, TransferWorker, CurrentTransfer, TransferTypes} from '../transfer'\r\nimport {Task} from '../task'\r\nimport StateMachineStates from './states'\r\n\r\n/**\r\nMain Facade class to the library\r\n  Create StateMachine with WebBluetoothCharacteristics representing the data and control point\r\n  Monitor the state property and use the function sendFirmware() to send a DFU zip.\r\n**/\r\n\r\nlet stateSymbol = Symbol()\r\nlet controlPointSymbol = Symbol()\r\nlet packetPointSymbol = Symbol()\r\nlet transfersSymbol = Symbol()\r\nlet progressSymbol = Symbol()\r\n\r\nclass StateMachine {\r\n\r\n  constructor (webBluetoothControlPoint, webBluetoothPacketPoint) {\r\n    this[controlPointSymbol] = webBluetoothControlPoint\r\n    this[packetPointSymbol] = webBluetoothPacketPoint\r\n    if (this[controlPointSymbol] !== undefined && this[packetPointSymbol] !== undefined) {\r\n      this[stateSymbol] = StateMachineStates.IDLE\r\n    } else {\r\n      this[stateSymbol] = StateMachineStates.NOT_CONFIGURED\r\n    }\r\n    this[transfersSymbol] = queue(Task.Worker, 1)\r\n    this[progressSymbol] = 0.0\r\n  }\r\n\r\n  /** get/set **/\r\n  get state () {\r\n    return this[stateSymbol]\r\n  }\r\n\r\n  set state (value) {\r\n    this[stateSymbol] = value\r\n  }\r\n\r\n  /** get/set **/\r\n\r\n  get controlPoint () {\r\n    return this[controlPointSymbol]\r\n  }\r\n\r\n  set controlPoint (webBluetoothCharacteristic) {\r\n    this[controlPointSymbol] = webBluetoothCharacteristic\r\n    if (this.state === StateMachineStates.NOT_CONFIGURED && (this[controlPointSymbol] !== undefined && this[packetPointSymbol] !== undefined)) {\r\n      this.state = StateMachineStates.IDLE\r\n    } else if(this.state === StateMachineStates.IDLE && (this[controlPointSymbol] === undefined ||  this[packetPointSymbol] === undefined)) {\r\n      this.state = StateMachineStates.NOT_CONFIGURED\r\n    }\r\n  }\r\n\r\n  /** get/set **/\r\n\r\n  get packetPoint () {\r\n    return this[packetPointSymbol]\r\n  }\r\n\r\n  set packetPoint (webBluetoothCharacteristic) {\r\n    this[packetPointSymbol] = webBluetoothCharacteristic\r\n    if (this.state === StateMachineStates.NOT_CONFIGURED && (this[controlPointSymbol] !== undefined && this[packetPointSymbol] !== undefined)) {\r\n      this.state = StateMachineStates.IDLE\r\n    } else if(this.state === StateMachineStates.IDLE && (this[controlPointSymbol] === undefined ||  this[packetPointSymbol] === undefined)) {\r\n      this.state = StateMachineStates.NOT_CONFIGURED\r\n    }\r\n  }\r\n\r\n  /** get/set **/\r\n\r\n  get transfers () {\r\n    return this[transfersSymbol]\r\n  }\r\n\r\n  set transfers (value) {\r\n    this[transfersSymbol] = value\r\n  }\r\n\r\n  /** get/set **/\r\n\r\n  get progress () {\r\n    return this[progressSymbol]\r\n  }\r\n\r\n  set progress (value) {\r\n    this[progressSymbol] = value\r\n  }\r\n\r\n  calculateProgress () {\r\n    switch (this.state) {\r\n      case StateMachineStates.NOT_CONFIGURED:\r\n        this.progress = 0.0\r\n        break\r\n      case StateMachineStates.IDLE:\r\n        this.progress = 0.0\r\n        break\r\n      case StateMachineStates.COMPLETE:\r\n        this.progress = 1.0\r\n        break\r\n      case StateMachineStates.FAILED:\r\n        this.progress = 1.0\r\n        break\r\n      case StateMachineStates.TRANSFERING:\r\n        if (CurrentTransfer !== undefined) {\r\n          CurrentTransfer.calculateProgress()\r\n          this.progress = CurrentTransfer.progress\r\n        }\r\n        break\r\n    }\r\n  }\r\n  /**\r\n    Internal method used to slot each part of a dfu zip for transfer to device\r\n  **/\r\n  addTransfer (transfer) {\r\n    this.transfers.push(transfer, (error) => {\r\n      transfer.end()\r\n      if (error) {\r\n        this.transfers.kill()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n    Send a firmware to a device. Throws when parameter or state is invalid for sending a firmware\r\n  **/\r\n  sendFirmware (firmware) {\r\n    if (this.state === StateMachineStates.NOT_CONFIGURED) {\r\n      throw new Error('StateMachine is not configured with bluetooth characteristics')\r\n    }\r\n    if (this.state !== StateMachineStates.IDLE) {\r\n      throw new Error('Can only initate transfer when idle')\r\n    }\r\n    if (firmware instanceof Firmware === false) {\r\n      throw new Error('Firmware needs to be of class Firmware')\r\n    }\r\n    for(var section of firmware.sections) {\r\n      this.addTransfer(new Transfer(section.dat, this.controlPoint, this.packetPoint, TransferTypes.Command))\r\n      this.addTransfer(new Transfer(section.bin, this.controlPoint, this.packetPoint, TransferTypes.Data))\r\n    }\r\n  }\r\n\r\n}\r\n\r\nmodule.exports.DFUStateMachineStates = StateMachineStates\r\nmodule.exports.DFUStateMachine = StateMachine\r\n"]}