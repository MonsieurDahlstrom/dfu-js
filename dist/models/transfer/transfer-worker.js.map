{"version":3,"sources":["../../../src/models/transfer/transfer-worker.js"],"names":["CurrentTransfer","undefined","TransferWorker","task","onCompleition","Error","begin","intervalTimer","setInterval","state","TransferState","Failed","clearInterval","end","Completed","module","exports"],"mappings":";;AAOA;;;;;;AAEA,IAAIA,kBAAkBC,SAAtB;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAAUC,IAAV,EAAgBC,aAAhB,EAA+B;AACpD,MAAID,uCAA6B,KAAjC,EAAwC;AACtC,UAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;AACD,MAAI,CAACD,aAAL,EAAoB;AAClB,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACDL,oBAAkBG,IAAlB;AACAA,OAAKG,KAAL;AACA,MAAMC,gBAAgBC,YAAY,YAAM;AACtC,QAAIL,KAAKM,KAAL,KAAeC,cAAcC,MAAjC,EAAyC;AACvCC,oBAAcL,aAAd;AACAJ,WAAKU,GAAL;AACAb,wBAAkBC,SAAlB;AACAG,oBAAc,iBAAd;AACD,KALD,MAKO,IAAID,KAAKM,KAAL,KAAeC,cAAcI,SAAjC,EAA4C;AACjDF,oBAAcL,aAAd;AACAJ,WAAKU,GAAL;AACAb,wBAAkBC,SAAlB;AACAG;AACD;AACF,GAZqB,EAYnB,IAZmB,CAAtB;AAaD,CAtBD;;AAwBAW,OAAOC,OAAP,CAAehB,eAAf,GAAiCA,eAAjC;AACAe,OAAOC,OAAP,CAAed,cAAf,GAAgCA,cAAhC","file":"transfer-worker.js","sourcesContent":["/**\r\nTransfer class represents a binary file inside a firmware update zip.\r\nA firmware update consists of a init package and data file. The StateMachine\r\nparases the zip file and creates a transfer object for each entry in the zip\r\n\r\nThe statemachine uses a queue to slot the Transfers in order\r\n**/\r\nimport Transfer from './transfer'\r\n\r\nlet CurrentTransfer = undefined\r\n\r\nconst TransferWorker = function (task, onCompleition) {\r\n  if (task instanceof Transfer === false) {\r\n    throw new Error('task is not of type Task')\r\n  }\r\n  if (!onCompleition) {\r\n    throw new Error('onCompleition is not set')\r\n  }\r\n  CurrentTransfer = task\r\n  task.begin()\r\n  const intervalTimer = setInterval(() => {\r\n    if (task.state === TransferState.Failed) {\r\n      clearInterval(intervalTimer)\r\n      task.end()\r\n      CurrentTransfer = undefined\r\n      onCompleition('Failed Transfer')\r\n    } else if (task.state === TransferState.Completed) {\r\n      clearInterval(intervalTimer)\r\n      task.end()\r\n      CurrentTransfer = undefined\r\n      onCompleition()\r\n    }\r\n  }, 1000)\r\n}\r\n\r\nmodule.exports.CurrentTransfer = CurrentTransfer\r\nmodule.exports.TransferWorker = TransferWorker\r\n"]}