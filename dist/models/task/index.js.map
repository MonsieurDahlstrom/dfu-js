{"version":3,"sources":["../../../src/models/task/index.js"],"names":["Task","characteristicToWriteTo","bytesToWrite","commandToExecute","opcode","buffer","characteristic","task","onCompleition","Error","writeValue","setTimeout","console","log","objectType","dataView","DataView","ArrayBuffer","setUint8","SELECT","length","CREATE","setUint32","packageCount","SET_PRN","setUint16","CALCULATE_CHECKSUM","EXECUTE","module","exports","TaskTypes","TaskResults"],"mappings":";AAoBA;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;IAEMA,I;AAEJ,gBAAaC,uBAAb,EAAsCC,YAAtC,EAAoDC,gBAApD,EAAsE;AAAA;;AACpE,SAAKC,MAAL,GAAcD,gBAAd;AACA,SAAKE,MAAL,GAAcH,YAAd;AACA,SAAKI,cAAL,GAAsBL,uBAAtB;AACD;;;;;6FAEoBM,I,EAAMC,a;;;;;sBACrBD,gBAAgBP,IAAhB,KAAyB,K;;;;;sBACrB,IAAIS,KAAJ,CAAU,uBAAV,C;;;oBAEHD,a;;;;;sBACG,IAAIC,KAAJ,CAAU,0BAAV,C;;;;;uBAGAF,KAAKD,cAAL,CAAoBI,UAApB,CAA+BH,KAAKF,MAApC,C;;;AACNM,2BAAW,YAAY;AACrBH;AACD,iBAFD,EAEG,GAFH;;;;;;;;AAIAI,wBAAQC,GAAR;AACAL,8BAAc,qBAAd;;;;;;;;;;;;;;;;;;2BAIWM,U,EAAYR,c,EAAgB;AACzC,UAAIS,WAAW,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgB,CAAhB,CAAb,CAAf;AACAF,eAASG,QAAT,CAAkB,CAAlB,EAAqB,gBAAUC,MAA/B;AACAJ,eAASG,QAAT,CAAkB,CAAlB,EAAqBJ,UAArB;AACA,aAAO,IAAId,IAAJ,CAASM,cAAT,EAAyBS,SAASV,MAAlC,EAA0C,gBAAUc,MAApD,CAAP;AACD;;;2BAEcL,U,EAAYM,M,EAAQd,c,EAAgB;AACjD,UAAIS,WAAW,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgB,CAAhB,CAAb,CAAf;AACAF,eAASG,QAAT,CAAkB,CAAlB,EAAqB,gBAAUG,MAA/B;AACAN,eAASG,QAAT,CAAkB,CAAlB,EAAqBJ,UAArB;;AAEAC,eAASO,SAAT,CAAmB,CAAnB,EAAsBF,MAAtB,EAA8B,IAA9B;AACA,aAAO,IAAIpB,IAAJ,CAASM,cAAT,EAAyBS,SAASV,MAAlC,EAA0C,gBAAUgB,MAApD,CAAP;AACD;;;gDAEmCE,Y,EAAcjB,c,EAAgB;AAChE,UAAIS,WAAW,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgB,CAAhB,CAAb,CAAf;AACAF,eAASG,QAAT,CAAkB,CAAlB,EAAqB,gBAAUM,OAA/B;;AAEAT,eAASU,SAAT,CAAmB,CAAnB,EAAsBF,YAAtB,EAAoC,IAApC;AACA,aAAO,IAAIvB,IAAJ,CAASM,cAAT,EAAyBS,SAASV,MAAlC,EAA0C,gBAAUmB,OAApD,CAAP;AACD;;;iCAEoBnB,M,EAAQC,c,EAAgB;AAC3C,aAAO,IAAIN,IAAJ,CAASM,cAAT,EAAyBD,MAAzB,CAAP;AACD;;;6BAEgBC,c,EAAgB;AAC/B,UAAIS,WAAW,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgB,CAAhB,CAAb,CAAf;AACAF,eAASG,QAAT,CAAkB,CAAlB,EAAqB,gBAAUQ,kBAA/B;AACA,aAAO,IAAI1B,IAAJ,CAASM,cAAT,EAAyBS,SAASV,MAAlC,EAA0C,gBAAUqB,kBAApD,CAAP;AACD;;;4BAEepB,c,EAAgB;AAC9B,UAAIS,WAAW,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgB,CAAhB,CAAb,CAAf;AACAF,eAASG,QAAT,CAAkB,CAAlB,EAAqB,gBAAUS,OAA/B;AACA,aAAO,IAAI3B,IAAJ,CAASM,cAAT,EAAyBS,SAASV,MAAlC,EAA0C,gBAAUsB,OAApD,CAAP;AACD;;;;;AAGHC,OAAOC,OAAP,CAAe7B,IAAf,GAAsBA,IAAtB;AACA4B,OAAOC,OAAP,CAAeC,SAAf;AACAF,OAAOC,OAAP,CAAeE,WAAf","file":"index.js","sourcesContent":["// Copyright (c) 2017 Monsieur Dahlstr√∂m Ltd\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\"use strict\";\r\n\r\nimport TaskTypes from './types'\r\nimport TaskResults from './results'\r\n\r\nclass Task {\r\n\r\n  constructor (characteristicToWriteTo, bytesToWrite, commandToExecute) {\r\n    this.opcode = commandToExecute\r\n    this.buffer = bytesToWrite\r\n    this.characteristic = characteristicToWriteTo\r\n  }\r\n\r\n  static async Worker (task, onCompleition) {\r\n    if (task instanceof Task === false) {\r\n      throw new Error('task not of type Task')\r\n    }\r\n    if (!onCompleition) {\r\n      throw new Error('onCompleition is not set')\r\n    }\r\n    try {\r\n      await task.characteristic.writeValue(task.buffer)\r\n      setTimeout(function () {\r\n        onCompleition()\r\n      }, 100)\r\n    } catch (exception) {\r\n      console.log(exception)\r\n      onCompleition('BLE Transfer Failed')\r\n    }\r\n  }\r\n\r\n  static verify (objectType, characteristic) {\r\n    let dataView = new DataView(new ArrayBuffer(2))\r\n    dataView.setUint8(0, TaskTypes.SELECT)\r\n    dataView.setUint8(1, objectType)\r\n    return new Task(characteristic, dataView.buffer, TaskTypes.SELECT)\r\n  }\r\n\r\n  static create (objectType, length, characteristic) {\r\n    let dataView = new DataView(new ArrayBuffer(6))\r\n    dataView.setUint8(0, TaskTypes.CREATE)\r\n    dataView.setUint8(1, objectType)\r\n    /** Data length set to little endian converstion */\r\n    dataView.setUint32(2, length, true)\r\n    return new Task(characteristic, dataView.buffer, TaskTypes.CREATE)\r\n  }\r\n\r\n  static setPacketReturnNotification (packageCount, characteristic) {\r\n    let dataView = new DataView(new ArrayBuffer(3))\r\n    dataView.setUint8(0, TaskTypes.SET_PRN)\r\n    /** Set the package received notification to the number of expected packages */\r\n    dataView.setUint16(1, packageCount, true)\r\n    return new Task(characteristic, dataView.buffer, TaskTypes.SET_PRN)\r\n  }\r\n\r\n  static writePackage (buffer, characteristic) {\r\n    return new Task(characteristic, buffer)\r\n  }\r\n\r\n  static checksum (characteristic) {\r\n    let dataView = new DataView(new ArrayBuffer(1))\r\n    dataView.setUint8(0, TaskTypes.CALCULATE_CHECKSUM)\r\n    return new Task(characteristic, dataView.buffer, TaskTypes.CALCULATE_CHECKSUM)\r\n  }\r\n\r\n  static execute (characteristic) {\r\n    let dataView = new DataView(new ArrayBuffer(1))\r\n    dataView.setUint8(0, TaskTypes.EXECUTE)\r\n    return new Task(characteristic, dataView.buffer, TaskTypes.EXECUTE)\r\n  }\r\n}\r\n\r\nmodule.exports.Task = Task\r\nmodule.exports.TaskTypes = TaskTypes\r\nmodule.exports.TaskResults = TaskResults\r\n"]}