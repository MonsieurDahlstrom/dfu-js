{"version":3,"sources":["../../../src/models/task/index.js"],"names":["Task","characteristicToWriteTo","bytesToWrite","commandToExecute","opcode","buffer","characteristic","task","onCompleition","Error","writeValue","setTimeout","console","log","objectType","dataView","DataView","ArrayBuffer","setUint8","SELECT","length","CREATE","setUint32","packageCount","SET_PRN","setUint16","CALCULATE_CHECKSUM","EXECUTE","module","exports","TaskTypes","TaskResults"],"mappings":"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","file":"index.js","sourcesContent":["// Copyright (c) 2017 Monsieur Dahlstr√∂m Ltd\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";\n\nimport TaskTypes from './types'\nimport TaskResults from './results'\n\nclass Task {\n\n  constructor (characteristicToWriteTo, bytesToWrite, commandToExecute) {\n    this.opcode = commandToExecute\n    this.buffer = bytesToWrite\n    this.characteristic = characteristicToWriteTo\n  }\n\n  static async Worker (task, onCompleition) {\n    if (task instanceof Task === false) {\n      throw new Error('task not of type Task')\n    }\n    if (!onCompleition) {\n      throw new Error('onCompleition is not set')\n    }\n    try {\n      await task.characteristic.writeValue(task.buffer)\n      setTimeout(function () {\n        onCompleition()\n      }, 100)\n    } catch (exception) {\n      console.log(exception)\n      onCompleition('BLE Transfer Failed')\n    }\n  }\n\n  static verify (objectType, characteristic) {\n    let dataView = new DataView(new ArrayBuffer(2))\n    dataView.setUint8(0, TaskTypes.SELECT)\n    dataView.setUint8(1, objectType)\n    return new Task(characteristic, dataView.buffer, TaskTypes.SELECT)\n  }\n\n  static create (objectType, length, characteristic) {\n    let dataView = new DataView(new ArrayBuffer(6))\n    dataView.setUint8(0, TaskTypes.CREATE)\n    dataView.setUint8(1, objectType)\n    /** Data length set to little endian converstion */\n    dataView.setUint32(2, length, true)\n    return new Task(characteristic, dataView.buffer, TaskTypes.CREATE)\n  }\n\n  static setPacketReturnNotification (packageCount, characteristic) {\n    let dataView = new DataView(new ArrayBuffer(3))\n    dataView.setUint8(0, TaskTypes.SET_PRN)\n    /** Set the package received notification to the number of expected packages */\n    dataView.setUint16(1, packageCount, true)\n    return new Task(characteristic, dataView.buffer, TaskTypes.SET_PRN)\n  }\n\n  static writePackage (buffer, characteristic) {\n    return new Task(characteristic, buffer)\n  }\n\n  static checksum (characteristic) {\n    let dataView = new DataView(new ArrayBuffer(1))\n    dataView.setUint8(0, TaskTypes.CALCULATE_CHECKSUM)\n    return new Task(characteristic, dataView.buffer, TaskTypes.CALCULATE_CHECKSUM)\n  }\n\n  static execute (characteristic) {\n    let dataView = new DataView(new ArrayBuffer(1))\n    dataView.setUint8(0, TaskTypes.EXECUTE)\n    return new Task(characteristic, dataView.buffer, TaskTypes.EXECUTE)\n  }\n}\n\nmodule.exports.Task = Task\nmodule.exports.TaskTypes = TaskTypes\nmodule.exports.TaskResults = TaskResults\n"]}