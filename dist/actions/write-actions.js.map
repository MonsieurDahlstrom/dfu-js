{"version":3,"sources":["../../src/actions/write-actions.js"],"names":["MutationTypes","WriteActions","webBluetoothDFUScheduleWrite","write","dispatch","commit","Write","ADD_WRITE","webBluetoothDFUWriteRemove","REMOVE_WRITE","webBluetoothDFUExecuteWrite","attempts","characteristic","writeValue","bytes","error","undefined","state","Completed","Failed","UPDATE_WRITE"],"mappings":";;;;;;;;;;;;;;AAAA;;IAAYA,a;;AACZ;;;;AACA;;;;;;;;AAEA,IAAMC,eAAe;AAEbC,8BAFa;AAAA,kGAEsCC,KAFtC;AAAA,UAEkBC,QAFlB,QAEkBA,QAFlB;AAAA,UAE4BC,MAF5B,QAE4BA,MAF5B;AAAA;AAAA;AAAA;AAAA;AAGjB,kBAAGF,iBAAiB,gBAAMG,KAA1B,EAAiC;AAC/BD,uBAAOL,cAAcO,SAArB,EAAgCJ,KAAhC;AACD;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQbK,4BARa;AAAA,oGAQqCL,KARrC;AAAA,UAQiBC,QARjB,SAQiBA,QARjB;AAAA,UAQ2BC,MAR3B,SAQ2BA,MAR3B;AAAA;AAAA;AAAA;AAAA;AASjB,kBAAGF,iBAAiB,gBAAMG,KAA1B,EAAiC;AAC/BD,uBAAOL,cAAcS,YAArB,EAAmCN,KAAnC;AACD;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcbO,6BAda;AAAA,oGAcsCP,KAdtC;AAAA,UAckBC,QAdlB,SAckBA,QAdlB;AAAA,UAc4BC,MAd5B,SAc4BA,MAd5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAedF,iBAAiB,gBAAMG,KAfT;AAAA;AAAA;AAAA;;AAgBXK,sBAhBW,GAgBA,CAhBA;;AAAA;AAAA;AAAA;AAAA,qBAmBLR,MAAMS,cAAN,CAAqBC,UAArB,CAAgCV,MAAMW,KAAtC,CAnBK;;AAAA;AAoBXX,oBAAMY,KAAN,GAAcC,SAAd;AACAb,oBAAMc,KAAN,GAAc,4BAAmBC,SAAjC;AACAP,yBAAW,CAAX;AAtBW;AAAA;;AAAA;AAAA;AAAA;;AAwBXA;AACAR,oBAAMY,KAAN;AACAZ,oBAAMc,KAAN,GAAc,4BAAmBE,MAAjC;;AA1BW;AAAA,kBA4BNR,WAAW,CA5BL;AAAA;AAAA;AAAA;;AAAA;AA6BfN,qBAAOL,cAAcoB,YAArB,EAAmCjB,KAAnC;;AA7Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAArB;;kBAkCeF,Y","file":"write-actions.js","sourcesContent":["import * as MutationTypes from './../mutation-types'\nimport TransmissionStatus from './../models/transmission-types'\nimport Write from '../models/write'\n\nconst WriteActions = {\n\n  async webBluetoothDFUScheduleWrite({ dispatch, commit }, write) {\n    if(write instanceof Write.Write) {\n      commit(MutationTypes.ADD_WRITE, write)\n    }\n  },\n\n  async webBluetoothDFUWriteRemove ({ dispatch, commit }, write) {\n    if(write instanceof Write.Write) {\n      commit(MutationTypes.REMOVE_WRITE, write)\n    }\n  },\n\n  async webBluetoothDFUExecuteWrite ({ dispatch, commit }, write) {\n    if(write instanceof Write.Write) {\n      var attempts = 3;\n      do {\n        try {\n          await write.characteristic.writeValue(write.bytes)\n          write.error = undefined\n          write.state = TransmissionStatus.Completed\n          attempts = 0\n        } catch (err) {\n          attempts--\n          write.error = err\n          write.state = TransmissionStatus.Failed\n        }\n      } while (attempts > 0);\n      commit(MutationTypes.UPDATE_WRITE, write)\n    }\n  }\n}\n\nexport default WriteActions\n"]}