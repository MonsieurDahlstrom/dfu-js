{"version":3,"sources":["../../src/actions/transfer-object-actions.js"],"names":["MutationTypes","DATA_CHUNK_SIZE","TransferObjectActions","webBluetoothDFUObjectAdd","transferObject","dispatch","commit","ADD_TRANSFER_OBJECT","webBluetoothDFUObjectRemove","REMOVE_TRANSFER_OBJECT","webBluetoothDFUObjectBegin","state","Creating","write","Verify","type","transfer","controlPoint","UPDATE_TRANSFER_OBJECT","webBluetoothDFUObjectToPackets","payload","offset","parentFileEnd","length","parentFileBegin","index","chunkBegin","chunkEnd","chunk","file","slice","chunks","push","webBluetoothDFUObjectTransferDataPackages","writes","buffer","Package","packetPoint","webBluetoothDFUObjectValidate","checksum","fileCRCToOffset","crc32","Storing","Execute","Create","Transfering","webBluetoothDFUObjectSetPacketReturnNotification","PacketReturnNotification","webBluetoothDFUObjectHandleEvent","dataView","opCode","getInt8","responseCode","webBluetoothDFUObjectHandleEventWhileCreating","Actions","SELECT","Responses","SUCCESS","getUint32","CREATE","SET_PRN","console","log","webBluetoothDFUObjectHandleEventWhileTransfering","CALCULATE_CHECKSUM","webBluetoothDFUObjectHandleEventWhileStoring","EXECUTE","Completed"],"mappings":"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","file":"transfer-object-actions.js","sourcesContent":["import crc from 'crc'\n//\nimport Write from '../models/write'\n//\nimport * as MutationTypes from '../mutation-types'\nimport {TransferObjectState} from '../models/transfer-object'\n\nconst DATA_CHUNK_SIZE = 20\n\nconst TransferObjectActions = {\n\n  /** Adding a TransferObject to the vuex state **/\n  async webBluetoothDFUObjectAdd({ dispatch, commit }, transferObject) {\n    commit(MutationTypes.ADD_TRANSFER_OBJECT, transferObject)\n  },\n\n  /* Remove a TransferObject from the vuex state */\n  async webBluetoothDFUObjectRemove({ dispatch, commit }, transferObject) {\n    commit(MutationTypes.REMOVE_TRANSFER_OBJECT, transferObject)\n  },\n\n  /** The first step in transferring this object, ask how much has already been transferred **/\n  async webBluetoothDFUObjectBegin({ dispatch, commit }, transferObject) {\n    transferObject.state = TransferObjectState.Creating\n    let write = new Write.Verify(transferObject.type,transferObject.transfer.controlPoint)\n    write.transferObject = transferObject\n    dispatch('webBluetoothDFUScheduleWrite',write)\n    dispatch('webBluetoothDFUExecuteWrite', write)\n    commit(MutationTypes.UPDATE_TRANSFER_OBJECT, transferObject)\n  },\n\n  /**\n    Internal convinence methods, a transfer object might have been partially\n    transfered already, if so the offset passed in as none zero.\n\n    Based on the offset and length into the Transfer objects file and the given\n    offset in this range, create the number of chunks needed.\n  **/\n  async webBluetoothDFUObjectToPackets({ dispatch, commit }, payload) {\n    let transferObject = payload.transferObject\n    let offset = payload.offset\n    let parentFileEnd = transferObject.offset + transferObject.length\n    let parentFileBegin = transferObject.offset + offset\n    let index = parentFileBegin\n    while (index < parentFileEnd) {\n      let chunkBegin = index\n      let chunkEnd = chunkBegin + DATA_CHUNK_SIZE < parentFileEnd ? chunkBegin + DATA_CHUNK_SIZE : chunkBegin + (parentFileEnd - index)\n      let chunk = transferObject.transfer.file.slice(chunkBegin, chunkEnd)\n      transferObject.chunks.push(chunk)\n      index += DATA_CHUNK_SIZE\n    }\n    commit(MutationTypes.UPDATE_TRANSFER_OBJECT, transferObject)\n  },\n\n  /** Slots all data chunks for transmission, the queue inside Transfer ensures the order **/\n  async webBluetoothDFUObjectTransferDataPackages({ dispatch, commit }, transferObject) {\n    let writes = []\n    for (let index = 0; index < transferObject.chunks.length; index++) {\n      let buffer = transferObject.chunks[index]\n      let write = new Write.Package(buffer,transferObject.transfer.packetPoint)\n      write.transferObject = transferObject\n      writes.push(write)\n      dispatch('webBluetoothDFUScheduleWrite', write)\n    }\n    dispatch('webBluetoothDFUExecuteWrite', writes[0])\n    commit(MutationTypes.UPDATE_TRANSFER_OBJECT, transferObject)\n  },\n\n  /** Given an offset & checksum, take the appropirate next action **/\n  async webBluetoothDFUObjectValidate({ dispatch, commit }, payload) {\n    var transferObject = payload.transferObject\n    var offset = payload.offset\n    var checksum = payload.checksum\n    /** The checksum reported back from a NRF51/52 is a crc of the Transfer object's file up till the offset */\n    let fileCRCToOffset = crc.crc32(transferObject.transfer.file.slice(0, offset))\n    if (offset === transferObject.offset + transferObject.length && checksum === fileCRCToOffset) {\n      /** Object has been transfered and should be moved into its right place on the device **/\n      transferObject.state = TransferObjectState.Storing\n      let write = new Write.Execute(transferObject.transfer.packetPoint)\n      dispatch('webBluetoothDFUScheduleWrite', write)\n    } else if (offset === transferObject.offset || offset > transferObject.offset + transferObject.length || checksum !== fileCRCToOffset) {\n      /** This object has not been trasnfered to the device or is faulty, recreate and transfer a new **/\n      transferObject.state = TransferObjectState.Creating\n      let write = new Write.Create(transferObject.transfer.controlPoint,transferObject.type,transferObject.length)\n      dispatch('webBluetoothDFUScheduleWrite', write)\n    } else {\n      /** its the right object on the device but it has not been transfred fully **/\n      transferObject.state = TransferObjectState.Transfering\n      dispatch('webBluetoothDFUObjectToPackets', transferObject)\n      dispatch('webBluetoothDFUObjectSetPacketReturnNotification', transferObject)\n      dispatch('webBluetoothDFUObjectTransferDataPackages', transferObject)\n    }\n    commit(MutationTypes.UPDATE_TRANSFER_OBJECT, transferObject)\n  },\n\n  /** Request a notification when all packets for this transferObject has been received on the device **/\n  async webBluetoothDFUObjectSetPacketReturnNotification({ dispatch, commit }, transferObject) {\n    let write = new Write.PacketReturnNotification(transferObject.transfer.packetPoint,transferObject.chunks.length)\n    write.transferObject = transferObject\n    dispatch('webBluetoothDFUScheduleWrite', write)\n    commit(MutationTypes.UPDATE_TRANSFER_OBJECT, transferObject)\n  },\n\n  /** handles events received on the Control Point Characteristic **/\n  async webBluetoothDFUObjectHandleEvent ({ dispatch, commit }, payload) {\n    let dataView = payload.dataView\n    let transferObject = payload.transferObject\n    /** Depending on which state this object is handle the relevent opcodes */\n    payload.opCode = dataView.getInt8(1)\n    payload.responseCode = dataView.getInt8(2)\n    switch (transferObject.state) {\n      case TransferObjectState.Creating:\n        dispatch('webBluetoothDFUObjectHandleEventWhileCreating', payload)\n        break\n      case TransferObjectState.Transfering:\n        dispatch('webBluetoothDFUObjectHandleEventWhileTransfering', payload)\n        break\n      case TransferObjectState.Storing: {\n        dispatch('webBluetoothDFUObjectHandleEventWhileStoring', payload)\n        break\n      }\n    }\n  },\n\n  async webBluetoothDFUObjectHandleEventWhileCreating ({ dispatch, commit }, payload) {\n    if (payload.opCode === Write.Actions.SELECT && payload.responseCode === Write.Responses.SUCCESS) {\n      /** verify how much how the transfer that has been completed */\n      payload.offset = payload.dataView.getUint32(7, true)\n      payload.checksum = payload.dataView.getUint32(11, true)\n      dispatch('webBluetoothDFUObjectValidate', payload)\n      commit(MutationTypes.UPDATE_TRANSFER_OBJECT, payload.transferObject)\n    } else if (payload.opCode === Write.Actions.CREATE && payload.responseCode === Write.Responses.SUCCESS) {\n      payload.transferObject.state = TransferObjectState.Transfering\n      /** start the transfer of the object  */\n      dispatch('webBluetoothDFUObjectToPackets', payload.transferObject)\n      dispatch('webBluetoothDFUObjectSetPacketReturnNotification', payload.transferObject)\n      dispatch('webBluetoothDFUObjectTransferDataPackages', payload.transferObject)\n      commit(MutationTypes.UPDATE_TRANSFER_OBJECT, payload.transferObject)\n    } else if (payload.opCode === Write.Actions.SET_PRN && payload.responseCode === Write.Responses.SUCCESS) {\n      //\n    } else {\n      console.log('  Operation: ' + payload.opCode + ' Result: ' + payload.responseCode)\n    }\n  },\n\n  async webBluetoothDFUObjectHandleEventWhileTransfering ({ dispatch, commit }, payload) {\n    if (payload.opCode === Write.Actions.CALCULATE_CHECKSUM && payload.responseCode === Write.Responses.SUCCESS) {\n      /** verify how much how the transfer that has been completed */\n      payload.offset = payload.dataView.getUint32(7, true)\n      payload.checksum = payload.dataView.getUint32(11, true)\n      dispatch('webBluetoothDFUObjectValidate', payload)\n      commit(MutationTypes.UPDATE_TRANSFER_OBJECT, payload.transferObject)\n    } else if (payload.opCode === Write.Actions.SET_PRN && payload.responseCode === Write.Responses.SUCCESS) {\n      //NOP\n    } else {\n      console.log('  Operation: ' + payload.opCode + ' Result: ' + payload.responseCode)\n    }\n  },\n\n  async webBluetoothDFUObjectHandleEventWhileStoring ({ dispatch, commit }, payload) {\n    if (payload.opCode === Write.Actions.EXECUTE && payload.responseCode === Write.Responses.SUCCESS) {\n      payload.transferObject.state = TransferObjectState.Completed\n      commit(MutationTypes.UPDATE_TRANSFER_OBJECT, payload.transferObject)\n    } else if (payload.opCode === Write.Actions.SET_PRN && payload.responseCode === Write.Responses.SUCCESS) {\n      //NOP\n    } else {\n      console.log('  Operation: ' + payload.opCode + ' Result: ' + payload.responseCode)\n    }\n  }\n}\n\nexport default TransferObjectActions\n"]}