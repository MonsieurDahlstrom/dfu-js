{"version":3,"sources":["../../src/actions/update-actions.js"],"names":["MutationTypes","DFU_BASE","DFUSecure","replace","DFU_CHAR_BASE","DFUSecureControlPoint","DFUSecurePacket","DFUCharacteristicsForDevice","device","gatt","getPrimaryService","service","getCharacteristic","packetPoint","controlPoint","identifier","id","UpdateActions","webBluetoothDFUCreateUpdate","bluetoothDevice","dispatch","commit","metadata","update","ADD_UPDATE","webBluetoothDFURemoveUpdate","REMOVE_UPDATE","webBluetoothDFUCancelUpdate","state","FAILED","MODIFED_UPDATE","webBluetoothDFURestoreUpdate","payload","setControlPoint","setPacketPoint","setDeviceIdentifier","webBluetoothDFUSendFirmware","firmware","IDLE","sections","section","transfers","push","dat","controlpointCharacteristic","packetCharacteristic","Command","length","bin","Data"],"mappings":"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","file":"update-actions.js","sourcesContent":["import {Update, UpdateStates} from '../models/update'\r\nimport {Firmware} from '../models/firmware'\r\nimport Transfer from '../models/transfer'\r\nimport {TransferObjectType} from '../models/transfer-object'\r\nimport * as MutationTypes from '../mutation-types'\r\n\r\n// DFU by Nordic Semiconductor\r\nconst DFU_BASE = '0000xxxx-0000-1000-8000-00805f9b34fb'\r\nexport const DFUSecure = DFU_BASE.replace('xxxx', 'fe59')\r\nconst DFU_CHAR_BASE = '8ec9xxxx-f315-4f60-9fb8-838830daea50'\r\n// Control Point is notify, write\r\nexport const DFUSecureControlPoint = DFU_CHAR_BASE.replace('xxxx', '0001')\r\n// Packet is Write No Response\r\nexport const DFUSecurePacket = DFU_CHAR_BASE.replace('xxxx', '0002')\r\n\r\nconst DFUCharacteristicsForDevice = async function (device) {\r\n  let service = await device.gatt.getPrimaryService(DFUSecure)\r\n  let packetPoint = await service.getCharacteristic(DFUSecurePacket)\r\n  let controlPoint = await service.getCharacteristic(DFUSecureControlPoint)\r\n  return {identifier: device.id, packetPoint: packetPoint, controlPoint: controlPoint}\r\n}\r\n\r\nconst UpdateActions = {\r\n\r\n  async webBluetoothDFUCreateUpdate({ dispatch, commit }, bluetoothDevice) {\r\n    let metadata = await DFUCharacteristicsForDevice(bluetoothDevice)\r\n    let update = new Update(metadata.identifier, metadata.controlPoint, metadata.packetPoint)\r\n    commit(MutationTypes.ADD_UPDATE, update)\r\n  },\r\n\r\n  async webBluetoothDFURemoveUpdate({ dispatch, commit }, update) {\r\n    commit(MutationTypes.REMOVE_UPDATE, update)\r\n  },\r\n\r\n  async webBluetoothDFUCancelUpdate({ dispatch, commit }, update) {\r\n    update.state = UpdateStates.FAILED\r\n    commit(MutationTypes.MODIFED_UPDATE, update)\r\n  },\r\n\r\n  async webBluetoothDFURestoreUpdate({ dispatch, commit }, payload) {\r\n    let metadata = await DFUCharacteristicsForDevice(payload.bluetoothDevice)\r\n    payload.update.setControlPoint(metadata.controlPoint)\r\n    payload.update.setPacketPoint(metadata.packetPoint)\r\n    payload.update.setDeviceIdentifier(payload.bluetoothDevice.id)\r\n    commit(MutationTypes.MODIFED_UPDATE, payload.update)\r\n  },\r\n\r\n  /**\r\n    Send a firmware to a device. Throws when parameter or state is invalid for sending a firmware\r\n  **/\r\n  async webBluetoothDFUSendFirmware({ dispatch, commit }, payload) {\r\n    let firmware = payload.firmware\r\n    let update = payload.update\r\n    if (firmware instanceof Firmware && update instanceof Update) {\r\n      if (update.state === UpdateStates.IDLE) {\r\n        for(var section of firmware.sections) {\r\n          update.transfers.push(new Transfer(section.dat, this.controlpointCharacteristic, this.packetCharacteristic, TransferObjectType.Command))\r\n          update.transfers[update.transfers.length-1].update = update\r\n          dispatch('webBluetoothDFUTransferAdd', update.transfers[update.transfers.length-1])\r\n          update.transfers.push(new Transfer(section.bin, this.controlpointCharacteristic, this.packetCharacteristic, TransferObjectType.Data))\r\n          update.transfers[update.transfers.length-1].update = update\r\n          dispatch('webBluetoothDFUTransferAdd', update.transfers[update.transfers.length-1])\r\n        }\r\n        commit(MutationTypes.MODIFED_UPDATE, update)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default UpdateActions\r\n"]}