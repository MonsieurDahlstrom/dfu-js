{"version":3,"sources":["../src/index.js"],"names":["state","updates","transfers","objects","writes","actions","mutations","getters"],"mappings":";;;;;;;;;;AAoBA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,QAAQ;AACZC,WAAS,EADG;AAEZC,aAAW,EAFC;AAGZC,WAAS,EAHG;AAIZC,UAAQ;AAJI,CAAd;;AASA,IAAMC,UAAU,sBAAc,EAAd,8GAAhB;AACA,IAAMC,YAAY,sBAAc,EAAd,sHAAlB;;kBAEe;AACbN,cADa;AAEbO,4BAFa;AAGbF,kBAHa;AAIbC;AAJa,C","file":"index.js","sourcesContent":["// Copyright (c) 2017 Monsieur Dahlstr√∂m Ltd\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\nimport UpdateActions from './actions/update-actions'\r\nimport TransferActions from './actions/transfer-actions'\r\nimport ObjectActions from './actions/transfer-object-actions'\r\nimport WriteActions from './actions/write-actions'\r\n//\r\nimport UpdateMutations from './mutations/update-mutations'\r\nimport TransferMutations from './mutations/transfer-mutations'\r\nimport ObjectMutations from './mutations/transfer-object-mutations'\r\nimport WriteMutations from './mutations/write-mutations'\r\n//\r\nimport getters from './getters'\r\n\r\nconst state = {\r\n  updates: [],\r\n  transfers: [],\r\n  objects: [],\r\n  writes: []\r\n}\r\n\r\n\r\n\r\nconst actions = Object.assign({}, UpdateActions, TransferActions, ObjectActions, WriteActions)\r\nconst mutations = Object.assign({}, UpdateMutations, TransferMutations, ObjectMutations, WriteMutations)\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n"]}