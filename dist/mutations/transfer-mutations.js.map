{"version":3,"sources":["../../src/mutations/transfer-mutations.js"],"names":["MutationTypes","TransferMutations","ADD_TRANSFER","state","transfer","transferIndex","transfers","indexOf","push","splice","UPDATE_TRANSFER","REMOVE_TRANSFER","objectsToRemove","objects","filter","object","writesToRemove","writes","write","transferObject","writeIndex","objectIndex"],"mappings":";;;;;;;;;;;;;;;;AAAA;;IAAYA,a;;AACZ;;;;;;;;AAEA,IAAMC,gGACHD,cAAcE,YADX,YAC0BC,KAD1B,EACiCC,QADjC,EAC2C;AAC7C,MAAMC,gBAAgBF,MAAMG,SAAN,CAAgBC,OAAhB,CAAwBH,QAAxB,CAAtB;AACA,MAAIC,gBAAgB,CAApB,EAAuB;AACrBF,UAAMG,SAAN,CAAgBE,IAAhB,CAAqBJ,QAArB;AACD,GAFD,MAEO;AACLD,UAAMG,SAAN,CAAgBG,MAAhB,CAAuBJ,aAAvB,EAAqC,CAArC,EAAuCD,QAAvC;AACD;AACF,CARG,qDASHJ,cAAcU,eATX,YAS6BP,KAT7B,EASoCC,QATpC,EAS8C;AAChD,MAAMC,gBAAgBF,MAAMG,SAAN,CAAgBC,OAAhB,CAAwBH,QAAxB,CAAtB;AACA,MAAIC,iBAAiB,CAArB,EAAwB;AACtBF,UAAMG,SAAN,CAAgBG,MAAhB,CAAuBJ,aAAvB,EAAqC,CAArC,EAAuCD,QAAvC;AACD;AACF,CAdG,qDAeHJ,cAAcW,eAfX,YAe6BR,KAf7B,EAeoCC,QAfpC,EAe8C;AAEhD,MAAIQ,kBAAkBT,MAAMU,OAAN,CAAcC,MAAd,CAAqB,UAACC,MAAD;AAAA,WAAYA,OAAOX,QAAP,KAAoBA,QAAhC;AAAA,GAArB,CAAtB;AAFgD;AAAA;AAAA;;AAAA;AAGhD,oDAAkBQ,eAAlB,4GAAmC;AAAA,UAA3BG,MAA2B;;AAEjC,UAAIC,iBAAiBb,MAAMc,MAAN,CAAaH,MAAb,CAAoB,UAACI,KAAD;AAAA,eAAWA,MAAMC,cAAN,KAAyBJ,MAApC;AAAA,OAApB,CAArB;AAFiC;AAAA;AAAA;;AAAA;AAGjC,yDAAiBC,cAAjB,iHAAiC;AAAA,cAAzBE,KAAyB;;AAC/B,cAAIE,aAAajB,MAAMc,MAAN,CAAaV,OAAb,CAAqBW,KAArB,CAAjB;AACA,cAAGE,cAAc,CAAjB,EAAoB;AAClBjB,kBAAMc,MAAN,CAAaR,MAAb,CAAoBW,UAApB,EAA+B,CAA/B;AACD;AACF;AARgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUjC,UAAIC,cAAclB,MAAMU,OAAN,CAAcN,OAAd,CAAsBQ,MAAtB,CAAlB;AACA,UAAGM,eAAe,CAAlB,EAAqB;AACnBlB,cAAMU,OAAN,CAAcJ,MAAd,CAAqBY,WAArB,EAAiC,CAAjC;AACD;AACF;AAjB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBhD,MAAKhB,gBAAgBF,MAAMG,SAAN,CAAgBC,OAAhB,CAAwBH,QAAxB,CAArB;AACA,MAAIC,iBAAiB,CAArB,EAAwB;AACtBF,UAAMG,SAAN,CAAgBG,MAAhB,CAAuBJ,aAAvB,EAAqC,CAArC;AACD;AACF,CAtCG,sBAAN;;kBAyCeJ,iB","file":"transfer-mutations.js","sourcesContent":["import * as MutationTypes from '../mutation-types'\nimport TrannsmissionStatus from '../models/transmission-types'\n\nconst TransferMutations = {\n  [MutationTypes.ADD_TRANSFER] (state, transfer) {\n    const transferIndex = state.transfers.indexOf(transfer)\n    if (transferIndex < 0) {\n      state.transfers.push(transfer)\n    } else {\n      state.transfers.splice(transferIndex,1,transfer)\n    }\n  },\n  [MutationTypes.UPDATE_TRANSFER] (state, transfer) {\n    const transferIndex = state.transfers.indexOf(transfer)\n    if (transferIndex >= 0) {\n      state.transfers.splice(transferIndex,1,transfer)\n    }\n  },\n  [MutationTypes.REMOVE_TRANSFER] (state, transfer) {\n    /** Find all objects for Transfer**/\n    let objectsToRemove = state.objects.filter((object) => object.transfer === transfer)\n    for(var object of objectsToRemove) {\n      /** Find all writes for a TransferObject**/\n      let writesToRemove = state.writes.filter((write) => write.transferObject === object)\n      for(var write of writesToRemove) {\n        let writeIndex = state.writes.indexOf(write)\n        if(writeIndex >= 0) {\n          state.writes.splice(writeIndex,1)\n        }\n      }\n      /** Remove object after write **/\n      let objectIndex = state.objects.indexOf(object)\n      if(objectIndex >= 0) {\n        state.objects.splice(objectIndex,1)\n      }\n    }\n    /** Finally remove the transfer**/\n    let  transferIndex = state.transfers.indexOf(transfer)\n    if (transferIndex >= 0) {\n      state.transfers.splice(transferIndex,1)\n    }\n  }\n}\n\nexport default TransferMutations\n"]}