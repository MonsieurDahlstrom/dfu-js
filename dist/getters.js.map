{"version":3,"sources":["../src/getters.js"],"names":["getters","webBluetoothUpdateForDevice","state","updates","find","item","id","device","webBluetoothRunningUpdates","filter","update","TRANSFERING","webBluetoothTransferForUpdate","transfers","transfer","TransmissionStatus","Transfering","webBluetoothObjectForTransfer","objects","object","webBluetoothWriteForObject","actions","action"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,UAAU;AACdC,+BAA6B;AAAA,WAAS;AAAA,aAAUC,MAAMC,OAAN,CAAcC,IAAd,CAAmB;AAAA,eAAQC,KAAKC,EAAL,KAAYC,OAAOD,EAA3B;AAAA,OAAnB,CAAV;AAAA,KAAT;AAAA,GADf;AAEdE,8BAA4B;AAAA,WAASN,MAAMC,OAAN,CAAcM,MAAd,CAAqB,UAACC,MAAD;AAAA,aAAYA,OAAOR,KAAP,KAAiB,qBAAaS,WAA1C;AAAA,KAArB,CAAT;AAAA,GAFd;AAGdC,iCAA+B,uCAACV,KAAD;AAAA,WAAW,UAACQ,MAAD;AAAA,aAAYR,MAAMW,SAAN,CAAgBT,IAAhB,CAAqB,UAACU,QAAD;AAAA,eAAcA,SAASJ,MAAT,KAAoBA,MAApB,IAA8BI,SAASZ,KAAT,KAAmBa,mBAAmBC,WAAlF;AAAA,OAArB,CAAZ;AAAA,KAAX;AAAA,GAHjB;AAIdC,iCAA+B,uCAACf,KAAD;AAAA,WAAW,UAACY,QAAD;AAAA,aAAcZ,MAAMgB,OAAN,CAAcd,IAAd,CAAmB,UAACe,MAAD;AAAA,eAAYA,OAAOL,QAAP,KAAoBA,QAApB,IAAgCK,OAAOjB,KAAP,KAAiBa,mBAAmBC,WAAhF;AAAA,OAAnB,CAAd;AAAA,KAAX;AAAA,GAJjB;AAKdI,8BAA4B,oCAAClB,KAAD;AAAA,WAAW,UAACiB,MAAD;AAAA,aAAYjB,MAAMmB,OAAN,CAAcjB,IAAd,CAAmB,UAACkB,MAAD;AAAA,eAAYA,OAAOH,MAAP,KAAkBA,MAAlB,IAA4BG,OAAOpB,KAAP,KAAiBa,mBAAmBC,WAA5E;AAAA,OAAnB,CAAZ;AAAA,KAAX;AAAA;AALd,CAAhB;;kBAQehB,O","file":"getters.js","sourcesContent":["import {Update, UpdateStates} from './models/update'\r\n\r\nconst getters = {\r\n  webBluetoothUpdateForDevice: state => device => state.updates.find(item => item.id === device.id),\r\n  webBluetoothRunningUpdates: state => state.updates.filter((update) => update.state === UpdateStates.TRANSFERING),\r\n  webBluetoothTransferForUpdate: (state) => (update) => state.transfers.find((transfer) => transfer.update === update && transfer.state === TransmissionStatus.Transfering),\r\n  webBluetoothObjectForTransfer: (state) => (transfer) => state.objects.find((object) => object.transfer === transfer && object.state === TransmissionStatus.Transfering),\r\n  webBluetoothWriteForObject: (state) => (object) => state.actions.find((action) => action.object === object && action.state === TransmissionStatus.Transfering)\r\n}\r\n\r\nexport default getters\r\n"]}