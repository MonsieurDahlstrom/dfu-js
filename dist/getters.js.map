{"version":3,"sources":["../src/getters.js"],"names":["getters","webBluetoothUpdateForDevice","state","device","updates","find","update","identifier","id","webBluetoothRunningUpdates","filter","TRANSFERING","webBluetoothTransferForUpdate","transfers","transfer","TransmissionStatus","Transfering","webBluetoothObjectForTransfer","objects","object","webBluetoothWriteForObject","actions","action"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,UAAU;AACdC,+BAA6B,qCAACC,KAAD,EAAQF,OAAR;AAAA,WAAoB,UAACG,MAAD,EAAY;AAC3D,aAAOD,MAAME,OAAN,CAAcC,IAAd,CAAmB;AAAA,eAAUC,OAAOC,UAAP,KAAsBJ,OAAOK,EAAvC;AAAA,OAAnB,CAAP;AACD,KAF4B;AAAA,GADf;AAIdC,8BAA4B,oCAACP,KAAD,EAAQF,OAAR;AAAA,WAAoBE,MAAME,OAAN,CAAcM,MAAd,CAAqB,UAACJ,MAAD;AAAA,aAAYA,OAAOJ,KAAP,KAAiB,qBAAaS,WAA1C;AAAA,KAArB,CAApB;AAAA,GAJd;AAKdC,iCAA+B,uCAACV,KAAD,EAAQF,OAAR;AAAA,WAAoB,UAACM,MAAD;AAAA,aAAYJ,MAAMW,SAAN,CAAgBR,IAAhB,CAAqB,UAACS,QAAD;AAAA,eAAcA,SAASR,MAAT,KAAoBA,MAApB,IAA8BQ,SAASZ,KAAT,KAAmBa,mBAAmBC,WAAlF;AAAA,OAArB,CAAZ;AAAA,KAApB;AAAA,GALjB;AAMdC,iCAA+B,uCAACf,KAAD,EAAQF,OAAR;AAAA,WAAoB,UAACc,QAAD;AAAA,aAAcZ,MAAMgB,OAAN,CAAcb,IAAd,CAAmB,UAACc,MAAD;AAAA,eAAYA,OAAOL,QAAP,KAAoBA,QAApB,IAAgCK,OAAOjB,KAAP,KAAiBa,mBAAmBC,WAAhF;AAAA,OAAnB,CAAd;AAAA,KAApB;AAAA,GANjB;AAOdI,8BAA4B,oCAAClB,KAAD,EAAQF,OAAR;AAAA,WAAoB,UAACmB,MAAD;AAAA,aAAYjB,MAAMmB,OAAN,CAAchB,IAAd,CAAmB,UAACiB,MAAD;AAAA,eAAYA,OAAOH,MAAP,KAAkBA,MAAlB,IAA4BG,OAAOpB,KAAP,KAAiBa,mBAAmBC,WAA5E;AAAA,OAAnB,CAAZ;AAAA,KAApB;AAAA;AAPd,CAAhB;;kBAUehB,O","file":"getters.js","sourcesContent":["import {Update, UpdateStates} from './models/update'\r\n\r\nconst getters = {\r\n  webBluetoothUpdateForDevice: (state, getters) => (device) => {\r\n    return state.updates.find(update => update.identifier === device.id)\r\n  },\r\n  webBluetoothRunningUpdates: (state, getters) => state.updates.filter((update) => update.state === UpdateStates.TRANSFERING),\r\n  webBluetoothTransferForUpdate: (state, getters) => (update) => state.transfers.find((transfer) => transfer.update === update && transfer.state === TransmissionStatus.Transfering),\r\n  webBluetoothObjectForTransfer: (state, getters) => (transfer) => state.objects.find((object) => object.transfer === transfer && object.state === TransmissionStatus.Transfering),\r\n  webBluetoothWriteForObject: (state, getters) => (object) => state.actions.find((action) => action.object === object && action.state === TransmissionStatus.Transfering)\r\n}\r\n\r\nexport default getters\r\n"]}