{"version":3,"sources":["../../src/vue-mixins/web-bluetooth-dfu.js"],"names":["WebBluetoothDFU","props","data","dfuFirmware","undefined","dfuStateMachine","dfuState","NOT_CONFIGURED","dfuProgress","created","on","updateDFUProgress","updateDFUState","controlPoint","webBluetoothControlPoint","packetPoint","webBluetoothPacketPoint","computed","dfuIdle","IDLE","dfuInProgress","TRANSFERING","dfuCompleted","COMPLETE","FAILED","methods","firmwareFromZip","zip","console","log","parseManifest","performDFU","sendFirmware","payload","state","progress"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,kBAAkB;AACtBC,SAAO,CAAC,0BAAD,EAA6B,yBAA7B,CADe;AAEvBC,QAAM,gBAAW;AAAE,WAAO,EAAEC,aAAaC,SAAf,EAA0BC,iBAAiB,mCAA3C,EAAkEC,UAAU,oCAAsBC,cAAlG,EAAkHC,aAAa,GAA/H,EAAP;AAA4I,GAFxI;AAGtBC,WAAS,mBAAY;AACnB,SAAKJ,eAAL,CAAqBK,EAArB,CAAwB,iBAAxB,EAA2C,KAAKC,iBAAhD;AACA,SAAKN,eAAL,CAAqBK,EAArB,CAAwB,cAAxB,EAAwC,KAAKE,cAA7C;;AAEA,SAAKP,eAAL,CAAqBQ,YAArB,GAAoC,KAAKC,wBAAzC;AACA,SAAKT,eAAL,CAAqBU,WAArB,GAAmC,KAAKC,uBAAxC;AACD,GATqB;AAUtBC,YAAU;AACRC,aAAS,mBAAY;AACnB,aAAO,KAAKZ,QAAL,KAAkB,oCAAsBa,IAA/C;AACD,KAHO;AAIRC,mBAAe,yBAAY;AACzB,aAAO,KAAKd,QAAL,KAAkB,oCAAsBe,WAA/C;AACD,KANO;AAORC,kBAAc,wBAAY;AACxB,aAAQ,KAAKhB,QAAL,KAAkB,oCAAsBiB,QAAxC,IAAoD,KAAKjB,QAAL,KAAkB,oCAAsBkB,MAApG;AACD;AATO,GAVY;AAqBtBC,WAAS;AACPC;AAAA,4EAAiB,iBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AACfC,wBAAQC,GAAR,CAAYF,GAAZ;AACA,qBAAKxB,WAAL,GAAmB,uBAAawB,GAAb,CAAnB;AAFe;AAAA,uBAGT,KAAKxB,WAAL,CAAiB2B,aAAjB,EAHS;;AAAA;AAIfF,wBAAQC,GAAR,CAAY,KAAK1B,WAAjB;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADO;AAOP4B,gBAAY,sBAAW;AACrB,WAAK1B,eAAL,CAAqB2B,YAArB,CAAkC,KAAK7B,WAAvC;AACD,KATM;AAUPS,oBAAgB,wBAAUqB,OAAV,EAAmB;AACjC,WAAK3B,QAAL,GAAgB2B,QAAQC,KAAxB;AACAN,cAAQC,GAAR,CAAY,oBAAoBI,QAAQC,KAAxC;AACD,KAbM;AAcPvB,uBAAmB,2BAAUsB,OAAV,EAAmB;AACpC,WAAKzB,WAAL,GAAmByB,QAAQE,QAA3B;AACAP,cAAQC,GAAR,CAAY,wBAAwBI,QAAQE,QAA5C;AACD;AAjBM;AArBa,CAAxB;;kBA0CenC,e","file":"web-bluetooth-dfu.js","sourcesContent":["import {Firmware, FirmwareType} from '../models/firmware'\r\nimport {DFUStateMachine, DFUStateMachineStates} from '../models/state-machine'\r\n\r\nconst WebBluetoothDFU = {\r\n  props: ['webBluetoothControlPoint', 'webBluetoothPacketPoint'],\r\n\tdata: function() { return { dfuFirmware: undefined, dfuStateMachine: new DFUStateMachine(), dfuState: DFUStateMachineStates.NOT_CONFIGURED, dfuProgress: 0.0} },\r\n  created: function () {\r\n    this.dfuStateMachine.on('progressChanged', this.updateDFUProgress)\r\n    this.dfuStateMachine.on('stateChanged', this.updateDFUState)\r\n    // `this` points to the vm instance\r\n    this.dfuStateMachine.controlPoint = this.webBluetoothControlPoint\r\n    this.dfuStateMachine.packetPoint = this.webBluetoothPacketPoint\r\n  },\r\n  computed: {\r\n    dfuIdle: function () {\r\n      return this.dfuState === DFUStateMachineStates.IDLE\r\n    },\r\n    dfuInProgress: function () {\r\n      return this.dfuState === DFUStateMachineStates.TRANSFERING\r\n    },\r\n    dfuCompleted: function () {\r\n      return (this.dfuState === DFUStateMachineStates.COMPLETE || this.dfuState === DFUStateMachineStates.FAILED)\r\n    }\r\n  },\r\n  methods: {\r\n    firmwareFromZip: async function (zip) {\r\n      console.log(zip)\r\n      this.dfuFirmware = new Firmware(zip)\r\n      await this.dfuFirmware.parseManifest()\r\n      console.log(this.dfuFirmware)\r\n    },\r\n    performDFU: function() {\r\n      this.dfuStateMachine.sendFirmware(this.dfuFirmware)\r\n    },\r\n    updateDFUState: function (payload) {\r\n      this.dfuState = payload.state\r\n      console.log('State changed: ' + payload.state);\r\n    },\r\n    updateDFUProgress: function (payload) {\r\n      this.dfuProgress = payload.progress\r\n      console.log('Progress chanaged: ' + payload.progress);\r\n    }\r\n  }\r\n}\r\n\r\nexport default WebBluetoothDFU\r\n"]}